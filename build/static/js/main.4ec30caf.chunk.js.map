{"version":3,"sources":["store/block/index.js","config/constants/tokens.js","config/constants/pools.js","utils/getRpcUrl.js","utils/web3.js","config/constants/contracts.js","utils/addressHelpers.js","utils/multicall.js","store/pools/fetchPools.js","store/pools/fetchPoolsUser.js","store/pools/index.js","utils/bigNumber.js","utils/formatBalance.js","store/prices/index.js","config/constants/endpoints.js","store/index.js","contexts/RefreshContext.js","hooks/useRefresh.js","store/hooks.js","utils/web3React.js","utils/wallet.js","hooks/useFacebookPixel.js","hooks/useAuth.js","hooks/useEagerConnect.js","components/TopNavbar/index.js","components/MainContainer/index.js","components/CardsSection/index.js","config/index.js","contexts/ModalContext.js","hooks/useModal.js","hooks/useWeb3.js","utils/contractHelpers.js","hooks/useContract.js","utils/callHelpers.js","hooks/usePrice.js","hooks/useBlockCountdown.js","utils/compoundApyHelpers.js","components/RoiModal/index.js","hooks/useStake.js","hooks/useUnstake.js","components/StakeModal/index.js","components/ClaimModal/index.js","hooks/useClaimReward.js","components/InsufficientBalanceModal/index.js","utils/getTimePeriods.js","utils/formatTimePeriod.js","components/PoolCard/index.js","utils/apr.js","hooks/useApprove.js","App.js","Providers.js","index.js"],"names":["blockSlice","createSlice","name","initialState","currentBlock","initialBlock","reducers","setBlock","state","action","payload","actions","tokens","wBnb","symbol","address","cgId","decimals","isLP","pair","swapTracker","lp","token1","token2","pools","poolId","stakingToken","earningToken","contractAddress","sortOrder","isFinished","nodes","process","RPC_URL","randomIndex","Math","floor","random","length","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","web3NoAccount","getWeb3NoAccount","getAddress","multicall","abi","calls","a","web3","multi","eth","Contract","MultiCallAbi","addresses","itf","Interface","calldata","map","call","toLowerCase","encodeFunctionData","params","methods","aggregate","returnData","res","i","decodeFunctionResult","fetchPoolsBlockLimits","callsStartBlock","poolsConfig","poolConfig","callsEndBlock","StakePoolABI","starts","ends","pool","index","startBlock","BigNumber","toNumber","endBlock","fetchPoolsTotalStaking","totalStaked","toJSON","fetchPoolsRewardPerBlock","rewards","rewardPerBlock","fetchPoolsAllowance","account","erc20ABI","allowances","reduce","acc","fetchUserBalances","balances","fetchUserStakeBalances","userInfo","amount","_hex","fetchUserPendingRewards","data","PoolsSlice","setPoolsPublicData","livePoolsData","livePoolData","find","entry","setPoolsUserData","userData","userPoolData","updatePoolsUserData","field","value","findIndex","p","updateUserAllowance","dispatch","updateUserBalance","tokenBalances","updateUserStakedBalance","stakedBalances","updateUserPendingReward","pendingRewards","BIG_TEN","getBalanceAmount","dividedBy","pow","getBalanceNumber","balance","formatNumber","number","minPrecision","maxPrecision","options","minimumFractionDigits","maximumFractionDigits","toLocaleString","notLpTokens","Object","values","filter","token","lpTokens","cgIds","join","fetchPrices","createAsyncThunk","fetch","response","json","apiPrices","keys","tokenAddress","usd","callsGetReserves","lpToken","callsTotalSupply","LPTokenABI","reserves","totalSupplies","lpPrices","totalSupply","token1Reserve","toString","token2Reserve","token1Price","token2Price","totalLiquidityValue","updatedAt","Date","now","pricesSlice","isLoading","lastUpdated","extraReducers","builder","addCase","pending","fulfilled","store","configureStore","reducer","block","blockReducer","poolsReducer","prices","pricesReducer","useAppDispatch","useDispatch","RefreshContext","React","createContext","slow","fast","RefreshContextProvider","children","useState","setSlow","setFast","isBrowserTabActiveRef","useRef","useEffect","onVisibilityChange","current","document","hidden","window","addEventListener","removeEventListener","useIsBrowserTabActive","interval","setInterval","prev","clearInterval","Provider","useRefresh","useContext","fastRefresh","slowRefresh","useFetchPublicData","blockLimits","totalStakings","rewardsPerBlock","liveData","blockLimit","totalStaking","getBlockNumber","blockNumber","useGetApiPrices","useSelector","useGetApiPrice","usePools","stakingTokenBalances","allowance","stakingTokenBalance","stakedBalance","pendingReward","fetchPoolsUserDataAsync","chainId","parseInt","injected","InjectedConnector","supportedChainIds","ConnectorNames","connectorsByName","getLibrary","provider","setupNetwork","ethereum","request","method","chainName","nativeCurrency","rpcUrls","blockExplorerUrls","console","error","ReactPixel","require","default","initPixel","init","useFacebookPixel","pixel","pageView","connector","useAuth","useWeb3React","activate","deactivate","login","useCallback","UnsupportedChainIdError","NoEthereumProviderError","alert","UserRejectedRequestError","message","then","trackCustom","logout","useEagerConnect","tried","setTried","isAuthorized","TopNavbar","id","className","href","src","alt","type","target","rel","MainContainer","Container","CardsSection","swapTrackerPayPools","swapTrackerBalance","formattedEightPayBalance","totalAccountStake","stakingTokenAddress","stakingTokenPrice","accountStake","plus","multipliedBy","formattedTotalAccountStake","totalValueLocked","totalvalue","formattedTotalValueLocked","Row","Col","md","Card","Body","BSC_BASE_URL","BLOCKS_PER_YEAR","ModalContext","ModalContextProvider","modal","setModal","useModal","onHide","useWeb3","library","refEth","setweb3","getContract","useStakePool","useMemo","config","getStakePoolContract","useERC20","bep20Abi","getBep20Contract","useLPToken","lpTokenABI","getLpTokenContract","approve","tokenContract","spender","ethers","constants","MaxUint256","send","from","deposit","stakePoolContract","times","gas","on","tx","transactionHash","withdraw","claimReward","usePrice","e","setToken1Reserve","setToken2Reserve","setTotalSupply","lpPrice","setLpPrice","apiPrice","loadData","getReserves","useBlockCountdown","timer","secondsRemaining","setSecondsRemaining","startCountdown","prevSecondsRemaining","tokenEarnedPerThousandDollarsCompounding","days","apr","tokenPrice","roundingDecimals","compoundFrequency","performanceFee","timesCompounded","aprAsDecimal","daysAsDecimalOfYear","principal","finalAmount","parseFloat","toFixed","getRoi","amountEarned","amountInvested","RoiModal","show","stakingTokenSymbol","earningTokenSymbol","earningTokenPrice","oneThousandDollarsWorthOfToken","tokenEarnedPerThousand1D","tokenEarnedPerThousand7D","tokenEarnedPerThousand30D","tokenEarnedPerThousand365D","roiPer1D","roiPer7D","roiPer30D","roiPer365D","exchangeUrl","Modal","animation","centered","Header","closeButton","Title","Table","borderless","Footer","useStake","handleStake","currency","onStake","useUnstake","handleUnstake","onUnstake","StakeModal","stakingMax","stakeAmount","setStakeAmount","pendingTx","setPendingTx","usdStakeAmount","handleChangePercent","stakePercent","amountToStake","decimalsToAppear","getFullDisplayBalance","log","handleClickOnConfirm","width","height","style","border","Form","Control","placeholder","step","onChange","Button","onClick","disabled","onReward","useClaimReward","formattedPendingReward","dollarPendingReward","handleConfirm","size","InsufficientBalanceModal","tokenSymbol","buyLink","variant","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","abs","timeLeft","years","months","hours","minutes","formatTimePeriod","periods","excludePeriods","textArr","forEach","period","includes","push","substr","Pool","isStarted","decimalRewardPerBlock","countdown","requestedApproval","setRequestedApproval","showDetails","setShowDetails","earningTokenAddress","aprLoaded","needsApproval","gt","hasStaked","hasPendingReward","bscBlockLink","bscContractLink","exchangeLink","rewardTokenPrice","tokenPerBlock","totalRewardPricePerYear","totalStakingTokenInPool","div","isNaN","isFinite","getPoolApr","apy","formattedStakeBalance","dollarStakedBalance","formattedTotalStake","onApprove","useApprove","openModal","handleApprove","OverlayTrigger","placement","overlay","Tooltip","ClaimModal","EXPONENTIAL_AT","DECIMAL_PLACES","App","useFetchPriceList","openedPools","sort","b","display","PoolCard","Providers","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4ec30caf.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = { currentBlock: 0, initialBlock: 0 };\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload;\n      }\n\n      state.currentBlock = action.payload;\n    },\n  },\n});\n\n// Actions\nexport const { setBlock } = blockSlice.actions;\n\nexport default blockSlice.reducer;\n","const tokens = {\n  wBnb: {\n    symbol: 'WBNB',\n    address: {\n      56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\n    },\n    cgId:'WBNB',\n    decimals: 18,\n    isLP: false,\n    pair: null,\n  },\n  swapTracker: {\n    symbol: 'SWPT',\n    address: {\n      56: '0x01832e3346fd3a0d38ca589d836bd78d1de7030c',\n    },\n    cgId:'swaptracker',\n    decimals: 18,\n    isLP: false,\n    pair: null,\n  },\n  lp: {\n    symbol: 'SWPT-BNB-LP',\n    address: {\n      56: '0x7469d42c186e56f0a8a3dbc357a94837a5e5b472',\n    },\n    decimals: 18,\n    cgId:'',\n    isLP: true,\n    pair: {\n      token1: '0x01832e3346fd3a0d38ca589d836bd78d1de7030c',\n      token2: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\n    },\n  },\n};\n\nexport default tokens;\n","import tokens from './tokens';\n\nconst pools = [\n  {\n    poolId: 0,\n    stakingToken: tokens.swapTracker,\n    earningToken: tokens.swapTracker,\n    contractAddress: {\n      56: '0xCF5cE6604a086954A9c9E0FDd39924FA8718204A',\n    },\n    sortOrder: 1,\n    isFinished: false,\n  },\n  {\n    poolId: 1,\n    stakingToken: tokens.lp,\n    earningToken: tokens.swapTracker,\n    contractAddress: {\n      56: '0x57235bEBdD946Dc67Fc748b454bb29158C971Dfb',\n    },\n    sortOrder: 2,\n    isFinished: false,\n  },\n];\n\nexport default pools;\n","// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3];\n\nconst getNodeUrl = () => {\n  const randomIndex = Math.floor(Math.random() * nodes.length);\n  return nodes[randomIndex];\n};\n\nexport default getNodeUrl;\n","import Web3 from 'web3';\nimport getRpcUrl from 'utils/getRpcUrl';\n\nconst RPC_URL = getRpcUrl();\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 });\nconst web3NoAccount = new Web3(httpProvider);\n\nconst getWeb3NoAccount = () => web3NoAccount;\n\nexport { getWeb3NoAccount };\nexport default web3NoAccount;\n","export default {\n  multiCall: {\n    56: '0x1ee38d535d541c55c9dae27b12edf090c608e6fb',\n    97: '0x67ADCB4dF3931b0C5Da724058ADC2174a9844412',\n  },\n};\n","import addresses from 'config/constants/contracts';\n\nexport const getAddress = address => address[process.env.REACT_APP_CHAIN_ID];\n\nexport const getMulticallAddress = () => getAddress(addresses.multiCall);\n","import { Interface } from '@ethersproject/abi';\nimport { getWeb3NoAccount } from 'utils/web3';\nimport MultiCallAbi from 'config/abi/Multicall.json';\nimport { getMulticallAddress } from 'utils/addressHelpers';\n\nconst multicall = async (abi, calls) => {\n  const web3 = getWeb3NoAccount();\n  const multi = new web3.eth.Contract(MultiCallAbi, getMulticallAddress());\n  const itf = new Interface(abi);\n\n  const calldata = calls.map(call => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)]);\n  const { returnData } = await multi.methods.aggregate(calldata).call();\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call));\n\n  return res;\n};\n\nexport default multicall;\n","import poolsConfig from 'config/constants/pools';\nimport StakePoolABI from 'config/abi/StakePool.json';\nimport BigNumber from 'bignumber.js';\nimport multicall from 'utils/multicall';\nimport { getAddress } from 'utils/addressHelpers';\n\nexport const fetchPoolsBlockLimits = async () => {\n  const callsStartBlock = poolsConfig.map(poolConfig => ({\n    address: getAddress(poolConfig.contractAddress),\n    name: 'startBlock',\n  }));\n\n  const callsEndBlock = poolsConfig.map(poolConfig => ({\n    address: getAddress(poolConfig.contractAddress),\n    name: 'endBlock',\n  }));\n\n  const starts = await multicall(StakePoolABI, callsStartBlock);\n  const ends = await multicall(StakePoolABI, callsEndBlock);\n\n  return poolsConfig.map((pool, index) => ({\n    poolId: pool.poolId,\n    startBlock: new BigNumber(starts[index]).toNumber(),\n    endBlock: new BigNumber(ends[index]).toNumber(),\n  }));\n};\n\nexport const fetchPoolsTotalStaking = async () => {\n  const calls = poolsConfig.map(poolConfig => ({\n    address: getAddress(poolConfig.contractAddress),\n    name: 'totalStakedTokens',\n  }));\n\n  const totalStaked = await multicall(StakePoolABI, calls);\n\n  return poolsConfig.map((pool, index) => ({\n    poolId: pool.poolId,\n    totalStaked: new BigNumber(totalStaked[index]).toJSON(),\n  }));\n};\n\nexport const fetchPoolsRewardPerBlock = async () => {\n  const calls = poolsConfig.map(poolConfig => ({\n    address: getAddress(poolConfig.contractAddress),\n    name: 'rewardPerBlock',\n  }));\n\n  const rewards = await multicall(StakePoolABI, calls);\n\n  return poolsConfig.map((pool, index) => ({\n    poolId: pool.poolId,\n    rewardPerBlock: new BigNumber(rewards[index]).toJSON(),\n  }));\n};\n","import poolsConfig from 'config/constants/pools';\nimport StakePoolABI from 'config/abi/StakePool.json';\nimport erc20ABI from 'config/abi/erc20.json';\nimport multicall from 'utils/multicall';\nimport { getAddress } from 'utils/addressHelpers';\nimport BigNumber from 'bignumber.js';\n\nexport const fetchPoolsAllowance = async account => {\n  const calls = poolsConfig.map(pool => ({\n    address: getAddress(pool.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(pool.contractAddress)],\n  }));\n\n  const allowances = await multicall(erc20ABI, calls);\n\n  return poolsConfig.reduce((acc, pool, i) => ({ ...acc, [pool.poolId]: new BigNumber(allowances[i]).toJSON() }), {});\n};\n\nexport const fetchUserBalances = async account => {\n  const calls = poolsConfig.map(pool => ({\n    address: getAddress(pool.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }));\n\n  const balances = await multicall(erc20ABI, calls);\n\n  return poolsConfig.reduce((acc, pool, i) => ({ ...acc, [pool.poolId]: new BigNumber(balances[i]).toJSON() }), {});\n};\n\nexport const fetchUserStakeBalances = async account => {\n  const calls = poolsConfig.map(pool => ({\n    address: getAddress(pool.contractAddress),\n    name: 'usersInfo',\n    params: [account],\n  }));\n\n  const userInfo = await multicall(StakePoolABI, calls);\n\n  return poolsConfig.reduce((acc, pool, i) => ({ ...acc, [pool.poolId]: new BigNumber(userInfo[i].amount._hex).toJSON() }), {});\n};\n\nexport const fetchUserPendingRewards = async account => {\n  const calls = poolsConfig.map(pool => ({\n    address: getAddress(pool.contractAddress),\n    name: 'getPendingReward',\n    params: [account],\n  }));\n\n  const res = await multicall(StakePoolABI, calls);\n\n  return poolsConfig.reduce((acc, pool, index) => ({ ...acc, [pool.poolId]: new BigNumber(res[index]).toJSON() }), {});\n};\n","import { createSlice } from '@reduxjs/toolkit';\nimport poolsConfig from 'config/constants/pools';\nimport { fetchPoolsBlockLimits, fetchPoolsTotalStaking, fetchPoolsRewardPerBlock } from './fetchPools';\nimport { fetchPoolsAllowance, fetchUserBalances, fetchUserStakeBalances, fetchUserPendingRewards } from './fetchPoolsUser';\n\nconst initialState = { data: [...poolsConfig] };\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData = action.payload;\n      state.data = state.data.map(pool => {\n        const livePoolData = livePoolsData.find(entry => entry.poolId === pool.poolId);\n        return { ...pool, ...livePoolData };\n      });\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload;\n      state.data = state.data.map(pool => {\n        const userPoolData = userData.find(entry => entry.poolId === pool.poolId);\n        return { ...pool, userData: userPoolData };\n      });\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, poolId } = action.payload;\n      const index = state.data.findIndex(p => p.poolId === poolId);\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } };\n    },\n  },\n});\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions;\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = () => async dispatch => {\n  const blockLimits = await fetchPoolsBlockLimits();\n  const totalStakings = await fetchPoolsTotalStaking();\n  const rewardsPerBlock = await fetchPoolsRewardPerBlock();\n\n  const liveData = poolsConfig.map(pool => {\n    const blockLimit = blockLimits.find(entry => entry.poolId === pool.poolId);\n    const totalStaking = totalStakings.find(entry => entry.poolId === pool.poolId);\n    const rewardPerBlock = rewardsPerBlock.find(entry => entry.poolId === pool.poolId);\n\n    return { ...blockLimit, ...totalStaking, ...rewardPerBlock };\n  });\n\n  dispatch(setPoolsPublicData(liveData));\n};\n\nexport const fetchPoolsUserDataAsync = account => async dispatch => {\n  const allowances = await fetchPoolsAllowance(account);\n  const stakingTokenBalances = await fetchUserBalances(account);\n  const stakedBalances = await fetchUserStakeBalances(account);\n  const pendingRewards = await fetchUserPendingRewards(account);\n\n  const userData = poolsConfig.map(pool => ({\n    poolId: pool.poolId,\n    allowance: allowances[pool.poolId],\n    stakingTokenBalance: stakingTokenBalances[pool.poolId],\n    stakedBalance: stakedBalances[pool.poolId],\n    pendingReward: pendingRewards[pool.poolId],\n  }));\n\n  dispatch(setPoolsUserData(userData));\n};\n\nexport const updateUserAllowance = (poolId, account) => async dispatch => {\n  const allowances = await fetchPoolsAllowance(account);\n  dispatch(updatePoolsUserData({ poolId, field: 'allowance', value: allowances[poolId] }));\n};\n\nexport const updateUserBalance = (poolId, account) => async dispatch => {\n  const tokenBalances = await fetchUserBalances(account);\n  dispatch(updatePoolsUserData({ poolId, field: 'stakingTokenBalance', value: tokenBalances[poolId] }));\n};\n\nexport const updateUserStakedBalance = (poolId, account) => async dispatch => {\n  const stakedBalances = await fetchUserStakeBalances(account);\n  dispatch(updatePoolsUserData({ poolId, field: 'stakedBalance', value: stakedBalances[poolId] }));\n};\n\nexport const updateUserPendingReward = (poolId, account) => async dispatch => {\n  const pendingRewards = await fetchUserPendingRewards(account);\n  dispatch(updatePoolsUserData({ poolId, field: 'pendingReward', value: pendingRewards[poolId] }));\n};\n\nexport default PoolsSlice.reducer;\n","import BigNumber from 'bignumber.js';\n\nexport const BIG_ZERO = new BigNumber(0);\nexport const BIG_TEN = new BigNumber(10);\n","import BigNumber from 'bignumber.js';\nimport { BIG_TEN } from './bigNumber';\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount, decimals = 18) => new BigNumber(amount).times(BIG_TEN.pow(decimals));\n\nexport const getBalanceAmount = (amount, decimals = 18) => new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals));\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance, decimals = 18) => getBalanceAmount(balance, decimals).toNumber();\n\nexport const getFullDisplayBalance = (balance, decimals = 18, decimalsToAppear) => balance\n  .dividedBy(BIG_TEN.pow(decimals))\n  .toFixed(decimalsToAppear);\n\nexport const formatNumber = (number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  };\n  return number.toLocaleString('en-GB', options);\n};\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport BigNumber from 'bignumber.js';\nimport { API_PRICES } from 'config/constants/endpoints';\nimport multicall from 'utils/multicall';\nimport LPTokenABI from 'config/abi/lpToken.json';\nimport tokens from 'config/constants/tokens';\nimport { getAddress } from 'utils/addressHelpers';\nimport { getBalanceAmount } from 'utils/formatBalance';\n\nconst notLpTokens = Object.values(tokens).filter(token => !token.isLP);\nconst lpTokens = Object.values(tokens).filter(token => token.isLP);\n\nconst notLpTokenIds = notLpTokens.map(token => token.symbol).join();\n\nconst cgIds = notLpTokens.map(token => token.cgId ).join();\n\nconst initialState = {\n  isLoading: false,\n  lastUpdated: null,\n  data: null,\n};\n\nexport const fetchPrices = createAsyncThunk('prices/fetch', async () => {\n  const response = await fetch(`${API_PRICES}?ids=${cgIds}&vs_currencies=usd`);\n  const data = await response.json();\n\n  \n  const apiPrices = Object.keys(data).reduce((acc, cgId) => {\n    const token = Object.values(tokens).find(token => token.cgId.toLowerCase() === cgId);\n    const tokenAddress = token.address[process.env.REACT_APP_CHAIN_ID];\n\n    return {\n      ...acc,\n      [tokenAddress]: data[cgId].usd,\n    };\n  }, {});\n\n  const callsGetReserves = lpTokens.map(lpToken => ({\n    address: getAddress(lpToken.address),\n    name: 'getReserves',\n  }));\n\n  const callsTotalSupply = lpTokens.map(lpToken => ({\n    address: getAddress(lpToken.address),\n    name: 'totalSupply',\n  }));\n\n  const reserves = await multicall(LPTokenABI, callsGetReserves);\n  const totalSupplies = await multicall(LPTokenABI, callsTotalSupply);\n\n  const lpPrices = {};\n\n  for (let i = 0; i < lpTokens.length; i++) {\n    const totalSupply = getBalanceAmount(totalSupplies[i]).toNumber();\n    const token1Reserve = getBalanceAmount(reserves[i][0].toString()).toNumber();\n    const token2Reserve = getBalanceAmount(reserves[i][1].toString()).toNumber();\n    const token1Price = apiPrices[lpTokens[i].pair.token1];\n    const token2Price = apiPrices[lpTokens[i].pair.token2];\n    const totalLiquidityValue = (token1Reserve * token1Price) + (token2Reserve * token2Price);\n    lpPrices[getAddress(lpTokens[i].address)] = new BigNumber(totalLiquidityValue).dividedBy(totalSupply).toNumber();\n  }\n\n  return {\n    updatedAt: Math.floor(Date.now() / 1000),\n    data: { ...apiPrices, ...lpPrices },\n  };\n});\n\nexport const pricesSlice = createSlice({\n  name: 'prices',\n  initialState,\n  extraReducers: builder => {\n    builder\n      .addCase(fetchPrices.pending, state => {\n        state.isLoading = true;\n      })\n      .addCase(fetchPrices.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.lastUpdated = action.payload.updatedAt;\n        state.data = action.payload.data;\n      });\n  },\n});\n\nexport default pricesSlice.reducer;\n","export const API_PRICES = process.env.REACT_APP_API_PRICES;\n","import { useDispatch } from 'react-redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport blockReducer from './block';\nimport poolsReducer from './pools';\nimport pricesReducer from './prices';\n\nconst store = configureStore({\n  reducer: {\n    block: blockReducer,\n    pools: poolsReducer,\n    prices: pricesReducer,\n  },\n});\n\nexport const useAppDispatch = () => useDispatch();\n\nexport default store;\n","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nconst SLOW_INTERVAL = 60000;\nconst FAST_INTERVAL = 10000;\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 });\n\nconst useIsBrowserTabActive = () => {\n  const isBrowserTabActiveRef = useRef(true);\n\n  useEffect(() => {\n    const onVisibilityChange = () => {\n      isBrowserTabActiveRef.current = !document.hidden;\n    };\n\n    window.addEventListener('visibilitychange', onVisibilityChange);\n\n    return () => {\n      window.removeEventListener('visibilitychange', onVisibilityChange);\n    };\n  }, []);\n\n  return isBrowserTabActiveRef;\n};\n\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0);\n  const [fast, setFast] = useState(0);\n  const isBrowserTabActiveRef = useIsBrowserTabActive();\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (isBrowserTabActiveRef.current) {\n        setFast(prev => prev + 1);\n      }\n    }, FAST_INTERVAL);\n    return () => clearInterval(interval);\n  }, [isBrowserTabActiveRef]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (isBrowserTabActiveRef.current) {\n        setSlow(prev => prev + 1);\n      }\n    }, SLOW_INTERVAL);\n    return () => clearInterval(interval);\n  }, [isBrowserTabActiveRef]);\n\n  return (\n    <RefreshContext.Provider value={{ slow, fast }}>\n      {children}\n    </RefreshContext.Provider>\n  );\n};\n\nRefreshContextProvider.propTypes = {\n  children: PropTypes.element,\n};\n\nexport { RefreshContext, RefreshContextProvider };\n","import { useContext } from 'react';\nimport { RefreshContext } from 'contexts/RefreshContext';\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext);\n  return { fastRefresh: fast, slowRefresh: slow };\n};\n\nexport default useRefresh;\n","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useAppDispatch } from 'store';\nimport { fetchPrices } from './prices';\nimport { fetchPoolsPublicDataAsync, fetchPoolsUserDataAsync, setBlock } from './actions';\nimport useRefresh from 'hooks/useRefresh';\nimport { getWeb3NoAccount } from 'utils/web3';\n\nexport const useBlock = () => useSelector(store => store.block);\n\nexport const useFetchPublicData = () => {\n  const dispatch = useAppDispatch();\n  const { slowRefresh } = useRefresh();\n\n  useEffect(() => {\n    dispatch(fetchPoolsPublicDataAsync());\n  }, [dispatch, slowRefresh]);\n\n  useEffect(() => {\n    const web3 = getWeb3NoAccount();\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber();\n      dispatch(setBlock(blockNumber));\n    }, 6000);\n\n    return () => clearInterval(interval);\n  }, [dispatch]);\n};\n\nexport const useFetchPriceList = () => {\n  const { slowRefresh } = useRefresh();\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(fetchPrices());\n  }, [dispatch, slowRefresh]);\n};\n\nexport const useGetApiPrices = () => {\n  const prices = useSelector(store => store.prices.data);\n  return prices;\n};\n\nexport const useGetApiPrice = address => {\n  const prices = useGetApiPrices();\n\n  if (!prices) {\n    return null;\n  }\n\n  return prices[address.toLowerCase()];\n};\n\nexport const usePools = account => {\n  const { fastRefresh } = useRefresh();\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account));\n    }\n  }, [account, dispatch, fastRefresh]);\n\n  const pools = useSelector(store => store.pools.data);\n\n  return pools;\n};\n","import { InjectedConnector } from '@web3-react/injected-connector';\n\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10);\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] });\n\nexport const ConnectorNames = {\n  INJECTED: 'injected',\n};\n\nexport const connectorsByName = {\n  [ConnectorNames.INJECTED]: injected,\n};\n\nexport const getLibrary = provider => provider;\n","// Set of helper functions to facilitate wallet setup\n\nimport { nodes } from './getRpcUrl';\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum;\n\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10);\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: process.env.REACT_APP_CHAIN_NAME,\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [process.env.REACT_APP_CHAIN_BLOCK_EXPLORER_URL_1],\n          },\n        ],\n      });\n      return true;\n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n  } else {\n    console.error('Can\\'t setup the BSC network on metamask because window.ethereum is undefined');\n    return false;\n  }\n};\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @param tokenImage\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (\n  tokenAddress,\n  tokenSymbol,\n  tokenDecimals,\n  tokenImage,\n) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: tokenImage,\n      },\n    },\n  });\n\n  return tokenAdded;\n};\n","import { useEffect, useState } from 'react';\r\nconst ReactPixel = require('react-facebook-pixel').default;\r\n\r\nconst initPixel = () => {\r\n  ReactPixel.init('3025937334196597');\r\n  ReactPixel.init('1267442583771416');\r\n  //console.log(\"FB_PIXEL_INIT\");\r\n  return ReactPixel;\r\n};\r\n\r\nexport const useFacebookPixel = () => {\r\n  const [pixel, setpixel] = useState(ReactPixel);\r\n  useEffect(() => {\r\n      initPixel();\r\n      pixel.pageView();\r\n  }, [initPixel]);\r\n  return pixel;\r\n};","import { useCallback, useEffect, useRef } from 'react';\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core';\nimport { NoEthereumProviderError, UserRejectedRequestError } from '@web3-react/injected-connector';\nimport { ConnectorNames, connectorsByName } from 'utils/web3React';\nimport { setupNetwork } from 'utils/wallet';\nimport { useFacebookPixel } from './useFacebookPixel';\n\nconst connector = connectorsByName[ConnectorNames.INJECTED];\n\nconst useIsBrowserTabActive = () => {\n  const isBrowserTabActiveRef = useRef(true);\n\n  useEffect(() => {\n    const onVisibilityChange = () => {\n      isBrowserTabActiveRef.current = !document.hidden;\n    };\n\n    window.addEventListener('visibilitychange', onVisibilityChange);\n\n    return () => {\n      window.removeEventListener('visibilitychange', onVisibilityChange);\n    };\n  }, []);\n\n  return isBrowserTabActiveRef;\n};\n\nconst useAuth = () => {\n  const { activate, deactivate } = useWeb3React();\n  const isBrowserTabActiveRef = useIsBrowserTabActive();\n  const pixel = useFacebookPixel();\n\n  const login = useCallback(() => {\n    activate(connector, async error => {\n      if (isBrowserTabActiveRef) {\n        if (error instanceof UnsupportedChainIdError) {\n          const hasSetup = await setupNetwork();\n          if (hasSetup) {\n            activate(connector);\n          }\n        } else if (error instanceof NoEthereumProviderError) {\n          alert('Provider Error: No provider was found');\n        } else if (error instanceof UserRejectedRequestError) {\n          alert('Authorization Error: Please authorize to access your account');\n        } else {\n          alert(`${error.name}: ${error.message}`);\n        }\n      }\n    })\n    .then(() => {\n      pixel.trackCustom('walled_connected');\n    });\n\n  }, [activate, isBrowserTabActiveRef, pixel]);\n\n  const logout = useCallback(() => deactivate(), [deactivate]);\n\n  return { login, logout };\n};\n\nexport default useAuth;\n","import { useEffect, useState } from 'react';\nimport { ConnectorNames, connectorsByName } from 'utils/web3React';\nimport useAuth from 'hooks/useAuth';\n\nconst connector = connectorsByName[ConnectorNames.INJECTED];\n\nconst useEagerConnect = () => {\n  const { login } = useAuth();\n\n  const [tried, setTried] = useState(false);\n\n  useEffect(() => {\n    if (!tried) {\n      connector.isAuthorized().then(isAuthorized => {\n        if (isAuthorized) {\n          login();\n        }\n      });\n      setTried(true);\n    }\n  }, [login, tried]);\n};\n\nexport default useEagerConnect;\n","import React from 'react';\r\n\r\nconst TopNavbar = function () {\r\n  return (\r\n    <div id=\"sticky-wrapper\" className=\"sticky-wrapper\">\r\n      <nav className=\"navbar navbar-expand-md bg-faded cripto_nav\">\r\n        <div className=\"container\">\r\n\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            <img src=\"images/logo.svg\" className=\"logo-swaptracker\" alt=\"logo\" />\r\n          </a>\r\n          <button className=\"navbar-toggler navbar-toggler-right\" type=\"button\" data-toggle=\"collapse\"\r\n            data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\">\r\n            <i className=\"fas fa-bars\"></i>\r\n          </button>\r\n\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <a href=\"https://swaptracker.io/#header-05\" className=\"nav-link\">Home</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a href=\"https://bit.ly/SWPTpcs\" target=\"_blank\" className=\"nav-link\" rel=\"noreferrer\">Buy Now</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a href=\"#\" target=\"_blank\" className=\"nav-link active\" rel=\"noreferrer\">Staking</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a href=\"https://swaptracker.io/#features\" className=\"nav-link\"> Features</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a href=\"https://swaptracker.io/#roadmap_05\" className=\"nav-link\">Roadmap</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a href=\"https://swaptracker.io/#tokenomics\" className=\"nav-link\">Tokenomics</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a\r\n                  href=\"https://www.swaptracker.io/pdf/litepaper-swaptracker.pdf\"\r\n                  target=\"_blank\"\r\n                  className=\"nav-link\"\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  Litepaper\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a href=\"https://swaptracker.io/#team_membar_02\" className=\"nav-link\">Team</a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopNavbar;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container } from 'react-bootstrap';\n\nconst MainContainer = function ({ children }) {\n  return (\n    <Container className=\"main-container\">\n      <Container className=\"content\">\n        {children}\n      </Container>\n    </Container>\n  );\n};\n\nMainContainer.propTypes = {\n  children: PropTypes.element,\n};\n\nexport default MainContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport BigNumber from 'bignumber.js';\nimport { Card, Col, Row } from 'react-bootstrap';\nimport { ShieldLock, Wallet2, Speedometer2 } from 'react-bootstrap-icons';\nimport { useGetApiPrices } from 'store/hooks';\nimport { getAddress } from 'utils/addressHelpers';\nimport { formatNumber, getBalanceNumber, getBalanceAmount } from 'utils/formatBalance';\nimport tokens from 'config/constants/tokens';\n\nconst CardsSection = function ({ pools }) {\n  const prices = useGetApiPrices();\n\n  const swapTrackerPayPools = pools.filter(pool => pool.stakingToken.symbol === 'SWPT');\n  const swapTrackerBalance = swapTrackerPayPools.length ? (swapTrackerPayPools[0]?.userData?.stakingTokenBalance || 0) : 0;\n  const formattedEightPayBalance = formatNumber(getBalanceNumber(swapTrackerBalance, tokens.swapTracker.decimals), 0, 0);\n\n  const totalAccountStake = pools.filter(pool => !!pool?.userData?.stakedBalance).reduce((acc, pool) => {\n    const stakingTokenAddress = getAddress(pool.stakingToken.address);\n    const stakingTokenPrice = prices ? prices[stakingTokenAddress] : 0;\n    const accountStake = getBalanceAmount(pool.userData.stakedBalance, pool.stakingToken.decimals);\n    return acc.plus(accountStake.multipliedBy(stakingTokenPrice));\n  }, new BigNumber(0));\n  const formattedTotalAccountStake = formatNumber(totalAccountStake.toNumber(), 2, 2);\n\n  const totalValueLocked = pools.reduce((acc, pool) => {\n    const stakingTokenAddress = getAddress(pool.stakingToken.address);\n    const stakingTokenPrice = prices ? prices[stakingTokenAddress] : 0;\n    const totalStaked = getBalanceAmount(pool.totalStaked || 0, pool.stakingToken.decimals);\n    const totalvalue = totalStaked.multipliedBy(stakingTokenPrice);\n    return acc.plus(totalvalue);\n  }, new BigNumber(0));\n  const formattedTotalValueLocked = formatNumber(totalValueLocked.toNumber(), 2, 2);\n\n  return (\n    <Row className=\"d-flex justify-content-between cards-container mt-4\">\n      <Col md={4} className=\"card-container\">\n        <Card className=\"h-100\">\n          <Card.Body>\n            <div className=\"d-flex align-items-center h-100\">\n              <div>\n                <div className=\"card-block-icon balance\">\n                  <Wallet2 className=\"card-icon\" />\n                </div>\n              </div>\n              <div className=\"ml-4\">\n                <div className=\"card-title\">BALANCE</div>\n                <div className=\"card-value\">{formattedEightPayBalance} SWPT</div>\n              </div>\n            </div>\n          </Card.Body>\n        </Card>\n      </Col>\n\n      <Col md={4} className=\"card-container\">\n        <Card className=\"h-100\">\n          <Card.Body>\n            <div className=\"d-flex align-items-center h-100\">\n              <div>\n                <div className=\"card-block-icon your-stake\">\n                  <ShieldLock className=\"card-icon\" />\n                </div>\n              </div>\n              <div className=\"ml-4\">\n                <div className=\"card-title\">YOUR STAKE</div>\n                <div className=\"card-value\">${formattedTotalAccountStake}</div>\n              </div>\n            </div>\n          </Card.Body>\n        </Card>\n      </Col>\n\n      <Col md={4} className=\"card-container\">\n        <Card className=\"h-100\">\n          <Card.Body>\n            <div className=\"d-flex align-items-center h-100\">\n              <div>\n                <div className=\"card-block-icon total-staked\">\n                  <Speedometer2 className=\"card-icon\" />\n                </div>\n              </div>\n              <div className=\"ml-4\">\n                <div className=\"card-title\">TOTAL VALUE LOCKED</div>\n                <div className=\"card-value\">${formattedTotalValueLocked}</div>\n              </div>\n            </div>\n          </Card.Body>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nCardsSection.propTypes = {\n  pools: PropTypes.array,\n};\n\nexport default CardsSection;\n","import BigNumber from 'bignumber.js/bignumber';\n\nexport const BSC_BASE_URL = process.env.REACT_APP_CHAIN_BLOCK_EXPLORER_URL_1;\nexport const BSC_BLOCK_TIME = 3;\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365); // 10512000\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst ModalContext = React.createContext();\n\nconst ModalContextProvider = ({ children }) => {\n  const [modal, setModal] = useState();\n\n  return (\n    <ModalContext.Provider value={{ setModal }}>\n      {children}\n      {modal}\n    </ModalContext.Provider>\n  );\n};\n\nModalContextProvider.propTypes = {\n  children: PropTypes.element,\n};\n\nexport { ModalContext, ModalContextProvider };\n","import React, { useCallback } from 'react';\nimport { ModalContext } from 'contexts/ModalContext';\n\nconst useModal = () => {\n  const { setModal } = React.useContext(ModalContext);\n  const onHide = useCallback(() => setModal(), [setModal]);\n\n  return [setModal, onHide];\n};\n\nexport default useModal;\n","import { useEffect, useState, useRef } from 'react';\nimport Web3 from 'web3';\nimport { useWeb3React } from '@web3-react/core';\nimport { getWeb3NoAccount } from 'utils/web3';\n\nconst useWeb3 = () => {\n  const { library } = useWeb3React();\n  const refEth = useRef(library);\n  const [web3, setweb3] = useState(library ? new Web3(library) : getWeb3NoAccount());\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setweb3(library ? new Web3(library) : getWeb3NoAccount());\n      refEth.current = library;\n    }\n  }, [library]);\n\n  return web3;\n};\n\nexport default useWeb3;\n","import web3NoAccount from 'utils/web3';\nimport { poolsConfig } from 'config/constants';\nimport { getAddress } from 'utils/addressHelpers';\n\nimport bep20Abi from 'config/abi/erc20.json';\nimport lpTokenABI from 'config/abi/lpToken.json';\nimport StakePoolABI from 'config/abi/StakePool.json';\n\nconst getContract = (abi, address, web3) => {\n  const _web3 = web3 ?? web3NoAccount;\n  return new _web3.eth.Contract(abi, address);\n};\n\nexport const getBep20Contract = (address, web3) => getContract(bep20Abi, address, web3);\n\nexport const getLpTokenContract = (address, web3) => getContract(lpTokenABI, address, web3);\n\nexport const getStakePoolContract = (id, web3) => {\n  const config = poolsConfig.find(pool => pool.poolId === id);\n  return getContract(StakePoolABI, getAddress(config.contractAddress), web3);\n};\n","import { useMemo } from 'react';\nimport useWeb3 from 'hooks/useWeb3';\nimport { getBep20Contract, getLpTokenContract, getStakePoolContract } from 'utils/contractHelpers';\n\nexport const useStakePool = poolId => {\n  const web3 = useWeb3();\n  return useMemo(() => getStakePoolContract(poolId, web3), [poolId, web3]);\n};\n\nexport const useERC20 = address => {\n  const web3 = useWeb3();\n  return useMemo(() => getBep20Contract(address, web3), [address, web3]);\n};\n\nexport const useLPToken = address => {\n  const web3 = useWeb3();\n  return useMemo(() => getLpTokenContract(address, web3), [address, web3]);\n};\n","import BigNumber from 'bignumber.js';\nimport { ethers } from 'ethers';\nimport { BIG_TEN } from './bigNumber';\n\nexport const approve = async (tokenContract, spender, account) => tokenContract.methods\n  .approve(spender, ethers.constants.MaxUint256)\n  .send({ from: account });\n\nexport const deposit = async (stakePoolContract, amount, decimals = 18, account) => stakePoolContract.methods\n  .deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n  .send({ from: account, gas: 200000 })\n  .on('transactionHash', tx => tx.transactionHash);\n\nexport const withdraw = async (stakePoolContract, amount, decimals, account) => stakePoolContract.methods\n  .withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n  .send({ from: account, gas: 200000 })\n  .on('transactionHash', tx => tx.transactionHash);\n\nexport const claimReward = async (stakePoolContract, account) => stakePoolContract.methods\n  .claimReward()\n  .send({ from: account, gas: 200000 })\n  .on('transactionHash', tx => tx.transactionHash);\n","import { useCallback, useEffect, useState } from 'react';\nimport BigNumber from 'bignumber.js';\nimport useRefresh from 'hooks/useRefresh';\nimport { getBalanceAmount } from 'utils/formatBalance';\nimport { useLPToken } from './useContract';\nimport { useGetApiPrice } from 'store/hooks';\nimport tokens from 'config/constants/tokens';\n\nconst usePrice = tokenAddress => {\n  const { slowRefresh } = useRefresh();\n\n  const token = Object.values(tokens).find(e => e.address[process.env.REACT_APP_CHAIN_ID] === tokenAddress);\n\n  const tokenContract = useLPToken(tokenAddress);\n\n  const [token1Reserve, setToken1Reserve] = useState();\n  const [token2Reserve, setToken2Reserve] = useState();\n  const [totalSupply, setTotalSupply] = useState();\n  const [lpPrice, setLpPrice] = useState();\n\n  const apiPrice = useGetApiPrice(tokenAddress);\n  const token1Price = useGetApiPrice(token.isLP ? token.pair.token1 : '');\n  const token2Price = useGetApiPrice(token.isLP ? token.pair.token2 : '');\n\n  const loadData = useCallback(async () => {\n    const reserves = await tokenContract.methods.getReserves().call();\n    const totalSupply = await tokenContract.methods.totalSupply().call();\n    setToken1Reserve(getBalanceAmount(reserves[0]).toNumber());\n    setToken2Reserve(getBalanceAmount(reserves[1]).toNumber());\n    setTotalSupply(getBalanceAmount(totalSupply).toNumber());\n  }, [tokenContract]);\n\n  useEffect(() => {\n    if (token.isLP) {\n      loadData();\n    }\n  }, [loadData, slowRefresh, token, tokenAddress]);\n\n  useEffect(() => {\n    if (totalSupply) {\n      const totalLiquidityValue = (token1Reserve * token1Price) + (token2Reserve * token2Price);\n      const lpPrice = new BigNumber(totalLiquidityValue).dividedBy(totalSupply).toNumber();\n      setLpPrice(lpPrice);\n    }\n  }, [token1Price, token2Price, totalSupply, token1Reserve, token2Reserve]);\n\n  return !token.isLP ? apiPrice : lpPrice;\n};\n\nexport default usePrice;\n","import { useEffect, useRef, useState } from 'react';\nimport { BSC_BLOCK_TIME } from 'config';\nimport { getWeb3NoAccount } from 'utils/web3';\n\nconst useBlockCountdown = blockNumber => {\n  const timer = useRef(null);\n  const [secondsRemaining, setSecondsRemaining] = useState(0);\n\n  useEffect(() => {\n    const startCountdown = async () => {\n      const web3 = getWeb3NoAccount();\n      const currentBlock = await web3.eth.getBlockNumber();\n\n      if (blockNumber > currentBlock) {\n        setSecondsRemaining((blockNumber - currentBlock) * BSC_BLOCK_TIME);\n\n        if (timer.current) {\n          clearInterval(timer.current);\n        }\n\n        timer.current = setInterval(() => {\n          setSecondsRemaining(prevSecondsRemaining => {\n            if (prevSecondsRemaining === 1) {\n              clearInterval(timer.current);\n            }\n\n            return prevSecondsRemaining - 1;\n          });\n        }, 1000);\n      }\n    };\n\n    startCountdown();\n\n    return () => {\n      clearInterval(timer.current);\n    };\n  }, [setSecondsRemaining, blockNumber, timer]);\n\n  return secondsRemaining;\n};\n\nexport default useBlockCountdown;\n","export const tokenEarnedPerThousandDollarsCompounding = ({\n  days,\n  apr,\n  tokenPrice,\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  // Everything here is worked out relative to a year,\n  // with the asset compounding at the compoundFrequency rate.\n  // 1 = once per day\n  const timesCompounded = 365 * compoundFrequency;\n  // We use decimal values rather than % in the math for both APY and\n  // the number of days being calculates as a proportion of the year\n  let aprAsDecimal = apr / 100;\n\n  if (performanceFee) {\n    // Reduce the APR by the % performance fee\n    const feeRelativeToApr = (apr / 100) * performanceFee;\n    const aprAfterFee = apr - feeRelativeToApr;\n    aprAsDecimal = aprAfterFee / 100;\n  }\n\n  const daysAsDecimalOfYear = days / 365;\n  // Calculate the starting TOKEN balance with a dollar balance of $1000.\n  const principal = 1000 / tokenPrice;\n  // This is a translation of the typical mathematical compounding APY formula.\n  // Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n  const finalAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear);\n  // To get the TOKEN amount earned, deduct the amount after compounding (finalAmount)\n  // from the starting TOKEN balance (principal)\n  const interestEarned = finalAmount - principal;\n\n  return parseFloat(interestEarned.toFixed(roundingDecimals));\n};\n\nexport const getRoi = ({ amountEarned, amountInvested }) => {\n  const percentage = (amountEarned / amountInvested) * 100;\n  return percentage;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, Table } from 'react-bootstrap';\nimport { BoxArrowUpRight } from 'react-bootstrap-icons';\nimport { tokenEarnedPerThousandDollarsCompounding, getRoi } from 'utils/compoundApyHelpers';\n\nconst RoiModal = function ({\n  show,\n  onHide,\n  apr,\n  stakingTokenAddress,\n  stakingTokenSymbol,\n  earningTokenSymbol,\n  earningTokenPrice,\n}) {\n  const compoundFrequency = 1;\n  const performanceFee = 0;\n\n  const oneThousandDollarsWorthOfToken = 1000 / earningTokenPrice;\n\n  const tokenEarnedPerThousand1D = tokenEarnedPerThousandDollarsCompounding({\n    days: 1,\n    apr: apr,\n    tokenPrice: earningTokenPrice,\n    compoundFrequency,\n    performanceFee,\n  });\n\n  const tokenEarnedPerThousand7D = tokenEarnedPerThousandDollarsCompounding({\n    days: 7,\n    apr: apr,\n    tokenPrice: earningTokenPrice,\n    compoundFrequency,\n    performanceFee,\n  });\n\n  const tokenEarnedPerThousand30D = tokenEarnedPerThousandDollarsCompounding({\n    days: 30,\n    apr: apr,\n    tokenPrice: earningTokenPrice,\n    compoundFrequency,\n    performanceFee,\n  });\n\n  const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n    days: 365,\n    apr: apr,\n    tokenPrice: earningTokenPrice,\n    compoundFrequency,\n    performanceFee,\n  });\n\n  const roiPer1D = getRoi({\n    amountEarned: tokenEarnedPerThousand1D,\n    amountInvested: oneThousandDollarsWorthOfToken,\n  }).toFixed(2);\n\n  const roiPer7D = getRoi({\n    amountEarned: tokenEarnedPerThousand7D,\n    amountInvested: oneThousandDollarsWorthOfToken,\n  }).toFixed(2);\n\n  const roiPer30D = getRoi({\n    amountEarned: tokenEarnedPerThousand30D,\n    amountInvested: oneThousandDollarsWorthOfToken,\n  }).toFixed(2);\n\n  const roiPer365D = getRoi({\n    amountEarned: tokenEarnedPerThousand365D,\n    amountInvested: oneThousandDollarsWorthOfToken,\n  }).toFixed(2);\n\n  const exchangeUrl = `https://exchange.pancakeswap.finance/#/swap?outputCurrency=${stakingTokenAddress}`;\n\n  return (\n    <Modal className=\"modal-roi\" show={show} onHide={onHide} animation={false} centered>\n      <Modal.Header closeButton>\n        <Modal.Title>ROI</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Table borderless className=\"text-right\">\n          <thead className=\"text-primary font-12\">\n            <tr>\n              <th>TIMEFRAME</th>\n              <th>ROI</th>\n              <th>{earningTokenSymbol} PER $1000</th>\n            </tr>\n          </thead>\n          <tbody className=\"text-value font-medium bold\">\n            <tr>\n              <td>1d</td>\n              <td>{roiPer1D}%</td>\n              <td>{tokenEarnedPerThousand1D}</td>\n            </tr>\n            <tr>\n              <td>7d</td>\n              <td>{roiPer7D}%</td>\n              <td>{tokenEarnedPerThousand7D}</td>\n            </tr>\n            <tr>\n              <td>30d</td>\n              <td>{roiPer30D}%</td>\n              <td>{tokenEarnedPerThousand30D}</td>\n            </tr>\n            <tr>\n              <td>365d(APY)</td>\n              <td>{roiPer365D}%</td>\n              <td>{tokenEarnedPerThousand365D}</td>\n            </tr>\n          </tbody>\n        </Table>\n        <p className=\"font-medium font-12 m-0\">\n          Calculated based on current rates. Compounding {compoundFrequency}x daily.\n          Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.\n        </p>\n      </Modal.Body>\n      <Modal.Footer className=\"d-flex justify-content-center\">\n        <a className=\"d-flex align-items-center bold\" href={exchangeUrl} target=\"_blank\" rel=\"noreferrer\">\n          <span>GET {stakingTokenSymbol}</span>\n          <BoxArrowUpRight className=\"ml-2\" />\n        </a>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nRoiModal.propTypes = {\n  show: PropTypes.bool,\n  onHide: PropTypes.func,\n  apr: PropTypes.number,\n  stakingTokenSymbol: PropTypes.string,\n  stakingTokenAddress: PropTypes.string,\n  earningTokenPrice: PropTypes.number,\n  earningTokenSymbol: PropTypes.string,\n};\n\nexport default RoiModal;\n","import { useCallback } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { useAppDispatch } from 'store';\nimport { updateUserStakedBalance, updateUserBalance } from 'store/actions';\nimport { deposit } from 'utils/callHelpers';\nimport { useStakePool } from './useContract';\nimport { useFacebookPixel } from './useFacebookPixel';\n\nexport const useStake = poolId => {\n  const dispatch = useAppDispatch();\n  const { account } = useWeb3React();\n  const stakePoolContract = useStakePool(poolId);\n  const pixel = useFacebookPixel();\n\n  const handleStake = useCallback(\n    async (amount, decimals) => {\n      await deposit(stakePoolContract, amount, decimals, account);\n      pixel.trackCustom((poolId === 0 ? 'SWPT_staked' : 'SWPT_BNB_LP_staked'), {currency: \"USD\", value: amount});\n      dispatch(updateUserStakedBalance(poolId, account));\n      dispatch(updateUserBalance(poolId, account));\n    },\n    [account, dispatch, poolId, stakePoolContract]//, pixel],\n  );\n\n  return { onStake: handleStake };\n};\n\nexport default useStake;\n","import { useCallback } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { useAppDispatch } from 'store';\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'store/actions';\nimport { withdraw } from 'utils/callHelpers';\nimport { useStakePool } from './useContract';\n\nexport const useUnstake = poolId => {\n  const dispatch = useAppDispatch();\n  const { account } = useWeb3React();\n  const stakePoolContract = useStakePool(poolId);\n\n  const handleUnstake = useCallback(\n    async (amount, decimals) => {\n      await withdraw(stakePoolContract, amount, decimals, account);\n\n      dispatch(updateUserStakedBalance(poolId, account));\n      dispatch(updateUserBalance(poolId, account));\n      dispatch(updateUserPendingReward(poolId, account));\n    },\n    [account, dispatch, poolId, stakePoolContract],\n  );\n\n  return { onUnstake: handleUnstake };\n};\n\nexport default useUnstake;\n","import React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport BigNumber from 'bignumber.js';\nimport { Button, Form, Modal } from 'react-bootstrap';\nimport { ArrowRepeat } from 'react-bootstrap-icons';\nimport { useStake } from 'hooks/useStake';\nimport { useUnstake } from 'hooks/useUnstake';\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance';\n\nconst StakeModal = function ({ pool, action, stakingMax, stakingTokenPrice, show, onHide }) {\n  const { poolId, stakingToken } = pool;\n\n  const { onStake } = useStake(poolId);\n  const { onUnstake } = useUnstake(poolId);\n\n  const [stakeAmount, setStakeAmount] = useState('');\n  const [pendingTx, setPendingTx] = useState(false);\n\n  const balance = getBalanceNumber(stakingMax, stakingToken.decimals);\n  const usdStakeAmount = formatNumber(new BigNumber(stakeAmount || 0).times(stakingTokenPrice).toNumber(), 2, 2);\n\n  const handleChangePercent = stakePercent => {\n    const amountToStake = getFullDisplayBalance(\n      stakingMax.dividedBy(100).multipliedBy(stakePercent),\n      stakingToken.decimals,\n      stakingToken.decimals,\n    );\n    console.log('amountToStake:', amountToStake, amountToStake.toString());\n    setStakeAmount(amountToStake);\n  };\n\n  const handleClickOnConfirm = useCallback(async () => {\n    setPendingTx(true);\n\n    try {\n      if (action === 'deposit') {\n        await onStake(stakeAmount, stakingToken.decimals);\n      } else {\n        await onUnstake(stakeAmount, stakingToken.decimals);\n      }\n\n      onHide();\n    } catch (err) {\n      console.error(err);\n    }\n\n    setPendingTx(false);\n  }, [action, onHide, onStake, onUnstake, stakeAmount, stakingToken.decimals]);\n\n  return (\n    <Modal className=\"modal-stake\" show={show} onHide={onHide} animation={false} centered>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          {action === 'deposit' ? 'Stake' : 'Unstake'}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className=\"d-flex justify-content-between align-items-center bold\">\n          <div>\n            {action === 'deposit' ? 'Deposit:' : 'Withdraw:'}\n          </div>\n          <div className=\"stake-token d-flex align-items-center\">\n            <div>{stakingToken.symbol}</div>\n            <div className=\"ml-1\" width=\"24px\" height=\"24px\">\n              <img src={`/images/tokens/${stakingToken.symbol}.png`} width=\"24px\" height=\"24px\" alt=\"icon\" />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"mt-1\">\n          <div className=\"p-2\" style={{ border: '1px solid #ddd' }}>\n            <Form>\n              <Form.Control\n                className=\"border-none text-value font-medium bold\"\n                value={stakeAmount}\n                placeholder=\"0.00\"\n                type=\"number\"\n                step=\"any\"\n                onChange={e => setStakeAmount(e.target.value)}\n              />\n            </Form>\n            <div className=\"text-right text-value font-medium font-14\">\n              {`~${usdStakeAmount} USD`}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"text-right text-value font-medium font-12\">\n          <span>Balance:</span>{' '}\n          <span>{balance}</span>\n        </div>\n\n        <div className=\"d-flex justify-content-between mt-3\">\n          <Button className=\"btn-percentage\" onClick={() => handleChangePercent(25)}>25%</Button>\n          <Button className=\"btn-percentage\" onClick={() => handleChangePercent(50)}>50%</Button>\n          <Button className=\"btn-percentage\" onClick={() => handleChangePercent(75)}>75%</Button>\n          <Button className=\"btn-percentage\" onClick={() => handleChangePercent(100)}>100%</Button>\n        </div>\n\n        <div className=\"mt-4 mb-2\">\n          <Button className=\"w-100\" onClick={handleClickOnConfirm} disabled={pendingTx || parseFloat(stakeAmount) === 0}>\n            {!pendingTx ? 'Confirm' : 'Confirming'}\n            {pendingTx && (<ArrowRepeat className=\"icon rotate ml-2\" />)}\n          </Button>\n        </div>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nStakeModal.propTypes = {\n  show: PropTypes.bool,\n  onHide: PropTypes.func,\n  pool: PropTypes.object,\n  action: PropTypes.string,\n  stakingMax: PropTypes.object,\n  stakingTokenPrice: PropTypes.number,\n};\n\nexport default StakeModal;\n","import React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport BigNumber from 'bignumber.js';\nimport { Button, Modal } from 'react-bootstrap';\nimport { ArrowRepeat } from 'react-bootstrap-icons';\nimport { useClaimReward } from 'hooks/useClaimReward';\nimport { formatNumber, getBalanceNumber } from 'utils/formatBalance';\n\nconst StakeModal = function ({ pool, earningTokenPrice, show, onHide }) {\n  const { poolId, earningToken, userData } = pool;\n\n  const { onReward } = useClaimReward(poolId);\n\n  const [pendingTx, setPendingTx] = useState(false);\n\n  const pendingReward = new BigNumber(userData?.pendingReward ? userData.pendingReward : 0);\n  const formattedPendingReward = formatNumber(getBalanceNumber(pendingReward, earningToken.decimals), 4, 4);\n  const dollarPendingReward = formatNumber(\n    getBalanceNumber(pendingReward.multipliedBy(earningTokenPrice), earningToken.decimals),\n  );\n\n  const handleConfirm = useCallback(async () => {\n    setPendingTx(true);\n\n    try {\n      await onReward();\n      onHide();\n    } catch (err) {\n      console.error(err);\n    }\n\n    setPendingTx(false);\n  }, [onHide, onReward]);\n\n  return (\n    <Modal className=\"modal-claim\" size=\"sm\" show={show} onHide={onHide} animation={false} centered>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          {earningToken.symbol} Claim\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className=\"d-flex justify-content-between align-items-center bold\">\n          <div>Claiming:</div>\n          <div className=\"d-flex flex-column align-items-end\">\n            <div className=\"text-value font-medium\">\n              {formattedPendingReward} {earningToken.symbol}\n            </div>\n            <div className=\"text-value font-medium font-12\">\n              ~${dollarPendingReward} USD\n            </div>\n          </div>\n        </div>\n\n        <div className=\"mt-4 mb-2\">\n          <Button className=\"w-100\" onClick={handleConfirm} disabled={pendingTx}>\n            {!pendingTx ? 'Confirm' : 'Confirming'}\n            {pendingTx && (<ArrowRepeat className=\"icon rotate ml-2\" />)}\n          </Button>\n        </div>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nStakeModal.propTypes = {\n  show: PropTypes.bool,\n  onHide: PropTypes.func,\n  pool: PropTypes.object,\n  earningTokenPrice: PropTypes.number,\n};\n\nexport default StakeModal;\n","import { useCallback } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { useAppDispatch } from 'store';\nimport { updateUserBalance, updateUserPendingReward } from 'store/actions';\nimport { claimReward } from 'utils/callHelpers';\nimport { useStakePool } from './useContract';\n\nexport const useClaimReward = poolId => {\n  const dispatch = useAppDispatch();\n  const { account } = useWeb3React();\n  const stakePoolContract = useStakePool(poolId);\n\n  const handleClaimReward = useCallback(async () => {\n    await claimReward(stakePoolContract, account);\n\n    dispatch(updateUserPendingReward(poolId, account));\n    dispatch(updateUserBalance(poolId, account));\n  }, [account, dispatch, stakePoolContract, poolId]);\n\n  return { onReward: handleClaimReward };\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal } from 'react-bootstrap';\nimport { BoxArrowUpRight } from 'react-bootstrap-icons';\n\nconst InsufficientBalanceModal = function ({ tokenAddress, tokenSymbol, show, onHide }) {\n  const buyLink = `https://exchange.pancakeswap.finance/#/swap?outputCurrency=${tokenAddress}`;\n\n  return (\n    <Modal className=\"modal-insufficient-balance\" show={show} onHide={onHide} animation={false} centered>\n      <Modal.Header closeButton>\n        <Modal.Title>{tokenSymbol} required</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <p className=\"bold text-primary\">Insufficient {tokenSymbol} balance</p>\n        <p className=\"font-medium\">\n          You&apos;ll need {tokenSymbol} to stake in this pool!<br />\n          Buy some {tokenSymbol}, or make sure your {tokenSymbol} isn&apos;t in another pool or LP.\n        </p>\n        <Button variant=\"primary\" className=\"d-flex justify-content-center w-100\">\n          <a className=\"d-flex align-items-center\" href={buyLink} target=\"_blank\" rel=\"noreferrer\">\n            <span>Buy {tokenSymbol}</span>\n            <BoxArrowUpRight className=\"icon ml-2\" />\n          </a>\n        </Button>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nInsufficientBalanceModal.propTypes = {\n  show: PropTypes.bool,\n  onHide: PropTypes.func,\n  tokenAddress: PropTypes.string,\n  tokenSymbol: PropTypes.string,\n};\n\nexport default InsufficientBalanceModal;\n","const MINUTE_IN_SECONDS = 60;\nconst HOUR_IN_SECONDS = 3600;\nconst DAY_IN_SECONDS = 86400;\nconst MONTH_IN_SECONDS = 2629800;\nconst YEAR_IN_SECONDS = 31557600;\n\nconst getTimePeriods = seconds => {\n  let delta = Math.abs(seconds);\n\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  };\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS);\n    delta -= timeLeft.years * YEAR_IN_SECONDS;\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS);\n    delta -= timeLeft.months * MONTH_IN_SECONDS;\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS);\n    delta -= timeLeft.days * DAY_IN_SECONDS;\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS);\n    delta -= timeLeft.hours * HOUR_IN_SECONDS;\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS);\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS;\n  }\n\n  timeLeft.seconds = delta;\n\n  return timeLeft;\n};\n\nexport default getTimePeriods;\n","/**\n * @param {Object} periods Return value from getTimePeriods\n * @param excludePeriods Key list for the object values of that exclude the periods\n * @return {string} '14h 3m 4s'\n */\nconst formatTimePeriod = (periods, excludePeriods = []) => {\n  const textArr = [];\n\n  Object.keys(periods).forEach(period => {\n    if (periods[period] > 0 && !excludePeriods.includes(period)) {\n      textArr.push(`${periods[period]}${period.substr(0, 1)}`);\n    }\n  });\n\n  if (textArr.length === 0) {\n    return null;\n  }\n\n  return textArr.join(' ');\n};\n\nexport default formatTimePeriod;\n","import React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { BSC_BASE_URL } from 'config';\nimport BigNumber from 'bignumber.js';\nimport { useWeb3React } from '@web3-react/core';\nimport { Button, Card, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport {\n  ArrowRepeat,\n  BoxArrowUpRight,\n  ChevronDown,\n  ChevronUp,\n  Dash,\n  FileSpreadsheet,\n  Plus,\n  Stopwatch,\n} from 'react-bootstrap-icons';\nimport Skeleton from 'react-loading-skeleton';\nimport useAuth from 'hooks/useAuth';\nimport useModal from 'hooks/useModal';\nimport { useERC20 } from 'hooks/useContract';\nimport { useApprove } from 'hooks/useApprove';\nimport usePrice from 'hooks/usePrice';\nimport useBlockCountdown from 'hooks/useBlockCountdown';\nimport { useBlock } from 'store/hooks';\nimport RoiModal from 'components/RoiModal';\nimport StakeModal from 'components/StakeModal';\nimport ClaimModal from 'components/ClaimModal';\nimport InsufficientBalanceModal from 'components/InsufficientBalanceModal';\nimport { getAddress } from 'utils/addressHelpers';\nimport { getPoolApr } from 'utils/apr';\nimport { getBalanceNumber, formatNumber } from 'utils/formatBalance';\nimport getTimePeriods from 'utils/getTimePeriods';\nimport formatTimePeriod from 'utils/formatTimePeriod';\nimport { tokenEarnedPerThousandDollarsCompounding, getRoi } from 'utils/compoundApyHelpers';\n\nconst Pool = function ({ pool }) {\n  const { poolId, startBlock, endBlock, rewardPerBlock, stakingToken, earningToken, totalStaked, userData } = pool;\n\n  const { account } = useWeb3React();\n  const { login } = useAuth();\n  const { currentBlock } = useBlock();\n\n  const isStarted = currentBlock ? startBlock <= currentBlock : false;\n  const isFinished = pool.isFinished || parseInt(endBlock) < currentBlock;\n  const decimalRewardPerBlock = getBalanceNumber(rewardPerBlock, stakingToken.decimals);\n\n  const countdown = formatTimePeriod(getTimePeriods(useBlockCountdown(startBlock)));\n\n  const [requestedApproval, setRequestedApproval] = useState(false);\n  const [showDetails, setShowDetails] = useState(false);\n\n  const isLoading = account && (!userData || !currentBlock);\n\n  const contractAddress = getAddress(pool.contractAddress);\n  const stakingTokenAddress = getAddress(stakingToken.address);\n  const earningTokenAddress = getAddress(earningToken.address);\n  const stakingTokenPrice = usePrice(stakingTokenAddress);\n  const earningTokenPrice = usePrice(earningTokenAddress);\n  const aprLoaded = !!totalStaked && !!stakingTokenPrice && !!earningTokenPrice;\n\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance ? userData.stakingTokenBalance : 0);\n  const allowance = new BigNumber(userData?.allowance ? userData.allowance : 0);\n  const needsApproval = !allowance.gt(0);\n  const stakedBalance = new BigNumber(userData?.stakedBalance ? userData.stakedBalance : 0);\n  const hasStaked = stakedBalance.gt(0);\n  const pendingReward = new BigNumber(userData?.pendingReward ? userData.pendingReward : 0);\n  const hasPendingReward = stakedBalance.gt(0);\n\n  const bscBlockLink = `${BSC_BASE_URL}/block/${endBlock}`;\n  const bscContractLink = `${BSC_BASE_URL}/address/${contractAddress}`;\n  const exchangeLink = !stakingToken.isLP ?\n    `https://pancakeswap.finance/swap?outputCurrency=${stakingTokenAddress}` :\n    `https://pancakeswap.finance/add/BNB/${stakingToken.pair.token2}`;\n\n  const apr = getPoolApr(\n    stakingTokenPrice,\n    earningTokenPrice,\n    getBalanceNumber(totalStaked, stakingToken.decimals),\n    parseFloat(decimalRewardPerBlock),\n  );\n\n  const oneThousandDollarsWorthOfToken = 1000 / earningTokenPrice;\n  const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n    days: 365,\n    apr: apr,\n    tokenPrice: earningTokenPrice,\n    compoundFrequency: 1,\n    performanceFee: 0,\n  });\n\n  const apy = getRoi({\n    amountEarned: tokenEarnedPerThousand365D,\n    amountInvested: oneThousandDollarsWorthOfToken,\n  }).toFixed(2);\n\n  const formattedStakeBalance = formatNumber(getBalanceNumber(stakedBalance, stakingToken.decimals), 4, 4);\n  const dollarStakedBalance = formatNumber(\n    getBalanceNumber(stakedBalance.multipliedBy(stakingTokenPrice), stakingToken.decimals),\n  );\n  const formattedPendingReward = formatNumber(getBalanceNumber(pendingReward, earningToken.decimals), 4, 4);\n  const dollarPendingReward = formatNumber(\n    getBalanceNumber(pendingReward.multipliedBy(earningTokenPrice), earningToken.decimals),\n  );\n  const formattedTotalStake = formatNumber(getBalanceNumber(totalStaked, stakingToken.decimals), 0, 0);\n  const totalValueLocked = getBalanceNumber(totalStaked, stakingToken.decimals) * stakingTokenPrice;\n\n  const stakingTokenContract = useERC20(stakingTokenAddress);\n  const { onApprove } = useApprove(stakingTokenContract, poolId);\n\n  const [openModal, onHide] = useModal();\n\n  const openRoiModal = () => openModal(\n    <RoiModal\n      apr={apr}\n      stakingTokenAddress={stakingTokenAddress}\n      stakingTokenSymbol={stakingToken.symbol}\n      earningTokenAddress={earningTokenAddress}\n      earningTokenSymbol={earningToken.symbol}\n      earningTokenPrice={earningTokenPrice}\n      show\n      onHide={onHide}\n    />,\n  );\n\n  const openInsufficientBalanceModal = () => openModal(\n    <InsufficientBalanceModal\n      tokenSymbol={stakingToken.symbol}\n      tokenAddress={stakingTokenAddress}\n      show\n      onHide={onHide}\n    />,\n  );\n\n  const openStakeModal = () => openModal(\n    <StakeModal\n      pool={pool}\n      action={'deposit'}\n      stakingMax={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n      show\n      onHide={onHide}\n    />,\n  );\n\n  const openUnstakeModal = () => openModal(\n    <StakeModal\n      pool={pool}\n      action={'withdraw'}\n      stakingMax={stakedBalance}\n      stakingTokenPrice={stakingTokenPrice}\n      show\n      onHide={onHide}\n    />,\n  );\n\n  const openClaimModal = () => openModal(\n    <ClaimModal\n      pool={pool}\n      earningTokenPrice={earningTokenPrice}\n      show\n      onHide={onHide}\n    />,\n  );\n\n  const handleApprove = useCallback(async () => {\n    setRequestedApproval(true);\n\n    try {\n      await onApprove();\n    } catch (err) {\n      console.error(err);\n    }\n\n    setRequestedApproval(false);\n  }, [onApprove]);\n\n  return (\n    <Card className=\"pool\">\n      <Card.Header>\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <div>\n            <h4>Earn {earningToken.symbol}</h4>\n            <h6 className=\"m-0\">Stake {stakingToken.symbol}</h6>\n          </div>\n          <div>\n            <img src={`/images/pools/${poolId}.png`} width=\"36\" height=\"36\" alt=\"icon\" />\n          </div>\n        </div>\n      </Card.Header>\n      <Card.Body>\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <OverlayTrigger\n            placement=\"top\"\n            overlay={\n              <Tooltip id=\"tooltip\">\n                Calculated based on current rates and assuming you manually compound daily.\n                This pool does not auto-coumpound.\n              </Tooltip>\n            }\n          >\n            <div className=\"font-medium apy\">APY:</div>\n          </OverlayTrigger>\n          {!apr && !aprLoaded ? (\n            <Skeleton width=\"82px\" height=\"32px\" />\n          ) : (\n            <div className=\"d-flex justify-content-center align-items-center row-apr\">\n              <Button variant=\"icon\" className=\"btn-apr\" onClick={openRoiModal} disabled={!apr}>\n                <FileSpreadsheet />\n              </Button>\n              <div className=\"text-value font-medium bold\">\n                <span>{apy ? apy : '- '}%</span>\n              </div>\n            </div>\n          )}\n        </div>\n\n        <div className=\"d-flex justify-content-between align-items-center row-tvl\">\n          <div className=\"font-12 font-medium\">TVL:</div>\n          {!totalValueLocked || isNaN(totalValueLocked) ? (\n            <Skeleton width=\"82px\" height=\"16px\" />\n          ) : (\n            <div className=\"d-flex justify-content-center align-items-center\">\n              <div className=\"text-value font-12 font-medium\">\n                <span>${formatNumber(totalValueLocked, 2, 2)}</span>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {!account && (\n          <>\n            <div className=\"d-flex justify-content-start mt-2\">\n              <span className=\"text-secondary bold font-12\">START EARNING</span>\n            </div>\n            <div className=\"d-flex justify-content-center mt-2\">\n              <Button className=\"w-100 btn-primary\" onClick={login}>\n                <span>Unlock Wallet</span>\n              </Button>\n            </div>\n          </>\n        )}\n\n        {account && (\n          <>\n            <div className=\"d-flex justify-content-start font-12 bold mt-3\">\n              <div className=\"text-primary\">{earningToken.symbol}</div>\n              <div className=\"text-secondary ml-1\">EARNED</div>\n            </div>\n\n            <div className=\"d-flex justify-content-between align-items-center mt-1\">\n              {isLoading ? (\n                <Skeleton width=\"80px\" height=\"38px\" />\n              ) : (\n                <div className=\"d-flex flex-column\">\n                  <div className={`${hasPendingReward ? 'text-value' : 'text-disabled'} font-medium bold`}>\n                    {hasPendingReward ? formattedPendingReward : '0'}\n                  </div>\n                  <div className={`${hasPendingReward ? 'text-value' : 'text-disabled'} font-medium font-12`}>\n                    {`~${hasPendingReward ? dollarPendingReward : 0} USD`}\n                  </div>\n                </div>\n              )}\n              <div>\n                <Button className=\"btn-claim\" onClick={openClaimModal} disabled={!hasPendingReward}>\n                  <span>Claim</span>\n                </Button>\n              </div>\n            </div>\n\n            <div className=\"d-flex justify-content-start font-12 bold mt-4\">\n              <div className={`${hasStaked ? 'text-primary' : 'text-secondary'}`}>\n                {hasStaked ? stakingToken.symbol : 'STAKE'}{' '}\n              </div>\n              <div className={`${hasStaked ? 'text-secondary' : 'text-primary'} ml-1`}>\n                {hasStaked ? 'STAKED' : stakingToken.symbol}\n              </div>\n            </div>\n\n            {isLoading ? (\n              <Skeleton width=\"100%\" height=\"42px\" />\n            ) : (\n              <>\n                {!isStarted ? (\n                  <Button className=\"w-100 mt-2\" disabled>Opens in {countdown}</Button>\n                ) : (\n                  <>\n                    {needsApproval && (\n                      <div className=\"d-flex justify-content-center mt-2\">\n                        <Button className=\"w-100\" onClick={handleApprove} disabled={requestedApproval}>\n                          <span>{!requestedApproval ? 'Enable' : 'Enabling'}</span>\n                          {requestedApproval && (<ArrowRepeat className=\"icon rotate ml-2\" />)}\n                        </Button>\n                      </div>\n                    )}\n\n                    {!needsApproval && (\n                      <div className=\"d-flex justify-content-between align-items-center mt-1\">\n                        <div className=\"d-flex flex-column\">\n                          <div className={`${hasStaked ? 'text-value' : 'text-disabled'} font-medium bold`}>\n                            {formattedStakeBalance}\n                          </div>\n                          <div className={`${hasStaked ? 'text-value' : 'text-disabled'} font-medium font-12`}>\n                            {`~${dollarStakedBalance || 0} USD`}\n                          </div>\n                        </div>\n                        <div>\n                          <Button\n                            variant=\"secondary\"\n                            className=\"btn-stake\"\n                            onClick={stakingTokenBalance.gt(0) ? openStakeModal : openInsufficientBalanceModal}\n                            disabled={isFinished}\n                          >\n                            <Plus />\n                          </Button>\n                          <Button\n                            variant=\"secondary\"\n                            className=\"btn-stake ml-1\"\n                            onClick={openUnstakeModal}\n                          >\n                            <Dash />\n                          </Button>\n                        </div>\n                      </div>\n                    )}\n                  </>\n                )}\n              </>\n            )}\n          </>\n        )}\n      </Card.Body>\n\n      <Card.Footer>\n        <div className=\"d-flex justify-content-center align-items-center\">\n          <Button variant=\"transparent\" className=\"btn-details\" onClick={() => setShowDetails(!showDetails)}>\n            {!showDetails ? 'Details' : 'Hide'}\n            {!showDetails ? <ChevronDown className=\"ml-2\" /> : <ChevronUp className=\"ml-2\" />}\n          </Button>\n        </div>\n\n        {showDetails && (\n          <>\n            <div className=\"d-flex justify-content-between align-items-center font-14\">\n              <div>Total staked:</div>\n              <div>{formattedTotalStake} {stakingToken.symbol}</div>\n            </div>\n            <div className=\"d-flex justify-content-between align-items-center font-14\">\n              <div>Reward per block:</div>\n              <div>{decimalRewardPerBlock} {earningToken.symbol}</div>\n            </div>\n            {isStarted && !isFinished && (\n              <div className=\"d-flex justify-content-between align-items-center font-14\">\n                <div>End:</div>\n                <div>\n                  <Button variant=\"transparent \">\n                    <a className=\"d-flex align-items-center bsc-link\" href={bscBlockLink} target=\"_blank\" rel=\"noreferrer\">\n                      <span>{endBlock - currentBlock} blocks</span>\n                      <Stopwatch className=\"icon ml-2\" />\n                    </a>\n                  </Button>\n                </div>\n              </div>\n            )}\n            {isFinished && (\n              <div className=\"d-flex justify-content-between align-items-center font-14\">\n                <div>Status:</div>\n                <div>Finished</div>\n              </div>\n            )}\n            <div className=\"text-right\">\n              <Button variant=\"transparent \">\n                <a className=\"d-flex align-items-center bsc-link\" href={bscContractLink} target=\"_blank\" rel=\"noreferrer\">\n                  <span>View contract</span>\n                  <BoxArrowUpRight className=\"icon ml-2\" />\n                </a>\n              </Button>\n            </div>\n            <div className=\"text-right\">\n              <Button variant=\"transparent \">\n                <a className=\"d-flex align-items-center bsc-link\" href={exchangeLink} target=\"_blank\" rel=\"noreferrer\">\n                  <span>Get {stakingToken.symbol}</span>\n                  <img className=\"rounded-circle ml-2\" src=\"/images/pancakeswap-bg.png\" width=\"20\" />\n                </a>\n              </Button>\n            </div>\n          </>\n        )}\n      </Card.Footer>\n    </Card>\n  );\n};\n\nPool.propTypes = {\n  pool: PropTypes.object,\n};\n\nexport default Pool;\n","import BigNumber from 'bignumber.js';\nimport { BLOCKS_PER_YEAR } from 'config';\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice,\n  rewardTokenPrice,\n  totalStaked,\n  tokenPerBlock,\n) => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR);\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked);\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100);\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber();\n};\n","import { useCallback } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { useAppDispatch } from 'store';\nimport { updateUserAllowance } from 'store/actions';\nimport { approve } from 'utils/callHelpers';\nimport { useStakePool } from './useContract';\n\nexport const useApprove = (tokenContract, poolId) => {\n  const dispatch = useAppDispatch();\n  const { account } = useWeb3React();\n  const stakePoolContract = useStakePool(poolId);\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(tokenContract, stakePoolContract.options.address, account);\n      dispatch(updateUserAllowance(poolId, account));\n      return tx;\n    } catch (e) {\n      return false;\n    }\n  }, [account, dispatch, tokenContract, stakePoolContract, poolId]);\n\n  return { onApprove: handleApprove };\n};\n","import React from 'react';\nimport BigNumber from 'bignumber.js';\nimport { useWeb3React } from '@web3-react/core';\nimport { Col, Row } from 'react-bootstrap';\nimport { usePools } from 'store/hooks';\nimport { useFetchPublicData, useFetchPriceList } from 'store/hooks';\nimport useEagerConnect from 'hooks/useEagerConnect';\nimport TopNavbar from 'components/TopNavbar';\nimport MainContainer from 'components/MainContainer';\nimport CardsSection from 'components/CardsSection';\nimport PoolCard from 'components/PoolCard';\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n});\n\nimport 'style/App.scss';\n\nfunction App() {\n  useEagerConnect();\n  useFetchPublicData();\n  useFetchPriceList();\n\n  const { account } = useWeb3React();\n  const pools = usePools(account);\n\n  const openedPools = pools.filter(pool => pool).sort((a, b) => a.sortOrder - b.sortOrder);\n\n  return (\n    <>\n      <TopNavbar></TopNavbar>\n      <MainContainer>\n        <a href=\"https://swaptracker.io/\">\n          <img src=\"./images/logo.svg\" alt=\"SwapTracker\" width=\"100%\" height=\"110px\" style={{ display: 'none' }}></img>\n        </a>\n        <CardsSection pools={pools} />\n        <Row className=\"d-flex justify-content-center mt-5\">\n          <Col md={9}>\n            <h1 className=\"page-title\">Pools</h1>\n            <Row>\n              {openedPools.map(pool => (\n                <Col md={6} key={pool.poolId} className=\"mb-4\">\n                  <PoolCard pool={pool} />\n                </Col>\n              ))}\n            </Row>\n          </Col>\n        </Row>\n      </MainContainer>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Web3ReactProvider } from '@web3-react/core';\nimport { Provider } from 'react-redux';\nimport { getLibrary } from 'utils/web3React';\nimport { ModalContextProvider } from 'contexts/ModalContext';\nimport { RefreshContextProvider } from 'contexts/RefreshContext';\nimport store from 'store';\n\nconst Providers = ({ children }) => (\n  <Web3ReactProvider getLibrary={getLibrary}>\n    <Provider store={store}>\n      <ModalContextProvider>\n        <RefreshContextProvider>\n          {children}\n        </RefreshContextProvider>\n      </ModalContextProvider>\n    </Provider>\n  </Web3ReactProvider>\n);\n\nexport default Providers;\n\nProviders.propTypes = {\n  children: PropTypes.element,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport Providers from './Providers';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}